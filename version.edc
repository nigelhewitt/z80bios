Version logging for BIOS

  update to git repository
	git add -u					move updates to staging area
   	git commit -m "0.1.0"		move to local repository, use version number
   	git push -u origin main		move to github

0.1.6
Start log. RTC works but not write to the RTC ram
Fix to DOW
Added ALLOW_ANSI conditional and colours in macros

0.1.7
Rewrite and restyle the README.md
Fix BLUE colour (typo)
Fix RTC RAM write

0.1.8
add map.asm to contain page mapping stuff
write the 'stack free' routines to get/put data anywhere

0.1.9
Add preliminary bios1/2 handlers breaking out zeta2.inc and macros.inc
Add error codes and move help to bios1 to gain ram space in PAGE3

0.1.10
Worked on ROM programming interface and successfully read the device codes
Switch to the ld a, [some_address] format rather than (some_address)

0.1.11
Wrote to ROM
add + option to d to show the next sequential block

0.1.12
Introduce 32 bit numbers primarily for SD sectors. However this gives me an
opportunity to sort out the mess hex and decimal numbers have become.
Rewrite the SPI interface and try to make the SD code more approachable.
Write the FAT32 technology demonstrator for a PC in C++ to read SD cards and
start to extend it to other FAT variants for the floppy disk drive.
Reverse the polarity of the LEDs to match the new case wiring
Add the option flags and copy switches to lights on option A.

0.1.13
Mostly today I was rewiring things now that I have the new parts.
Copy ROM1 and ROM2 into RAM4 and RAM5 at boot so I can have 'local' variables
and then modify the CALLBIOS macro to use RAM4/5.
Add the M command to read the SD. Naturally it doesn't work yet.
Add date/time to the BIOS1/2 sign on plus a RAM check

0.1.14
Modify DUMP et al to use [C:IX] as [IX] when C==0xff to get local addressing
Reworked the SPI interface
Added a 'beep on error' to the make.ps1
Redesign the 'run routine in another bios as the original system had a stack
fault and needed speeding up.
Find another, better I think, SD system. Edit it to fit in and start debugging.
Introduce the stepper to provide fixes addresses for a change from one ROM to
another without using a code wedge.
Rewrite the PAGE0 stuff to try and get a cleaner cold boot.
Revised space reporting as the stepper system goes at the top of ROM.
Fixed the 'no interrupts on power up' by direct calling a bland interrupt
handler to get a RETI executed.
Added a 'wait for RAM' in the startup and that seemed to fix it. Probably the
DS1210 RAM backup wasn't letting the chip enable go fast enough.


